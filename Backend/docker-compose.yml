name: crypto-lens

services:

  cl_nginx:
    container_name: cl-nginx
    build: docker/nginx
    restart: on-failure
    depends_on:
      - cl_app
    ports:
      - ${NGINX_PORT_EXTERNAL}:${NGINX_PORT_LOCAL}
    volumes:
      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www
    networks:
      - cl-network

  cl_app:
    container_name: cl-app
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/php_fpm/Dockerfile
    env_file: .env
    depends_on:
      - cl_db
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
      PHP_IDE_CONFIG: serverName=${XDEBUG_STORM_SERVER_NAME} #xdebug
    volumes:
      - ./src:/var/www
      - cl_files:/var/www/storage/app/
      - ./docker/php_fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini #xdebug конфигурация для подключения к ide
      - ./docker/php_fpm/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/php_fpm/php.ini:/usr/local/etc/php/php.ini
      # - ./public.key:/var/www/storage/public.key
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cl-network

  cl_db:
    image: postgres:15
    container_name: cl-db
    restart: on-failure
#    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${DB_PORT_EXTERNAL}:${DB_PORT_LOCAL}
    volumes:
      - cl_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sa -d ${DB_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cl-network

  cl_redis:
    image: redis
    env_file: .env
    restart: on-failure
    container_name: cl-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - cl_redis:/data
    ports:
      - ${REDIS_PORT_EXTERNAL}:${REDIS_PORT_LOCAL}
    networks:
      - cl-network

  cl_static:
    container_name: cl-static
    build:
      context: .
      dockerfile: ./docker/static_server/Dockerfile
    volumes:
      - cl_files:/app/resources # Директория со статическими файлами
      - ./docker/static_server/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - ${NGINX_STATIC_PORT_EXTERNAL}:${NGINX_STATIC_PORT_LOCAL}

volumes:
  cl_db:
    name: cl_db
  cl_redis:
    name: cl_redis
  cl_files:
    name: cl_files

networks:
  cl-network:
    external:
      name: cl-network