name: crypto-lens

services:
  cl_app:
    container_name: cl_app
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    environment:
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@cl_db:${DB_PORT_LOCAL}/${DB_DATABASE}?sslmode=disable
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      cl_db:
        condition: service_started
      cl_redis:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - cl-network

  cl_redis:
    image: redis
    env_file: .env
    restart: on-failure
    container_name: cl_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - cl_redis:/data
    ports:
      - ${REDIS_PORT_EXTERNAL}:${REDIS_PORT_LOCAL}
    networks:
      - cl-network

  cl_db:
    image: postgres:15
    container_name: cl_db
    restart: on-failure
    #    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${DB_PORT_EXTERNAL}:${DB_PORT_LOCAL}
    volumes:
      - cl_db:/var/lib/postgresql/data
    networks:
      - cl-network

volumes:
  cl_db:
    name: cl_db
  cl_redis:
    name: cl_redis

networks:
  cl-network:
    external: true
    name: cl-network